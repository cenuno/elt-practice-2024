---
services:
  python:
    container_name: python
    build:
      dockerfile: Dockerfile.python
    environment:
      POSTGRES_DB: ${COMPOSE_POSTGRES_DB}
      POSTGRES_PYTHON_USER: ${COMPOSE_POSTGRES_PYTHON_USER}
      POSTGRES_PYTHON_PASSWORD: ${COMPOSE_POSTGRES_PYTHON_PASSWORD}
      POSTGRES_SCHEMA: ${COMPOSE_POSTGRES_SCHEMA}
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8050:8050
    volumes:
      - ./:/elt-practice-2024/
      - myapi_volume:/project_data/
  postgres:
    container_name: postgres
    build:
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: ${COMPOSE_POSTGRES_DB}
      POSTGRES_USER: ${COMPOSE_POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${COMPOSE_POSTGRES_ADMIN_PASSWORD}
      POSTGRES_SCHEMA: ${COMPOSE_POSTGRES_SCHEMA}
      POSTGRES_PYTHON_USER: ${COMPOSE_POSTGRES_PYTHON_USER}
      POSTGRES_PYTHON_PASSWORD: ${COMPOSE_POSTGRES_PYTHON_PASSWORD}
      POSTGRES_PYTHON_CONNECTION_LIMIT: ${COMPOSE_POSTGRES_PYTHON_CONNECTION_LIMIT}
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${COMPOSE_POSTGRES_ADMIN_USER} -d ${COMPOSE_POSTGRES_DB} -c 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_volume:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    build:
      dockerfile: Dockerfile.pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${COMPOSE_PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${COMPOSE_PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8888:80
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_volume:/var/lib/pgadmin


volumes:
  myapi_volume:
  postgres_volume:
  pgadmin_volume:
